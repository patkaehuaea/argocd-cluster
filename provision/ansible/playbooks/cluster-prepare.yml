---
- hosts:
    - master
    - worker
  become: true
  gather_facts: true
  any_errors_fatal: true
  pre_tasks:
    - name: Pausing for 5 seconds...
      ansible.builtin.pause:
        seconds: 5
  tasks:
    - name: Locale
      block:
        - name: Locale | Set timezone
          community.general.timezone:
            name: "{{ timezone | default('America/Los_Angeles') }}"
    - name: Networking
      block:
        - name: Networking | Set hostname to inventory hostname
          ansible.builtin.hostname:
            name: "{{ inventory_hostname }}"
        - name: Networking | Update /etc/hosts to include inventory hostname
          ansible.builtin.blockinfile:
            path: /etc/hosts
            block: |
              127.0.1.1   {{ inventory_hostname }}

    - name: Only run "update_cache=yes" if the last one is more than 3600 seconds ago
      ansible.builtin.apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Packages
      block:

        - name: Packages | Install required packages
          ansible.builtin.apt:
            name: "{{ packages | default([]) }}"
            state: present
            update_cache: true

        - name: Remove useless packages from the cache
          ansible.builtin.apt:
            autoclean: yes

        - name: Remove dependencies that are no longer required
          ansible.builtin.apt:
            autoremove: yes

        - name: Run the equivalent of "apt-get clean" as a separate step
          apt:
            clean: yes

    - name: User Configuration
      block:
        - name: User Configuration | Add additional SSH public keys
          ansible.posix.authorized_key:
            user: "{{ ansible_user }}"
            key: "{{ item }}"
          loop: "{{ public_ssh_keys | default([]) }}"
          #    - name: System Configuration (1)
          #      block:
          #        - name: System Configuration (1) | Disable firewalld
          #          ansible.builtin.systemd:
          #            service: firewalld.service
          #            enabled: false
          #            masked: true
          #            state: stopped
        - name: System Configuration (1) | Enable fstrim
          ansible.builtin.systemd:
            service: fstrim.timer
            enabled: true
    - name: System Configuration (2)
      block:
        - name: System Configuration (2) | Enable kernel modules now
          community.general.modprobe:
            name: "{{ item }}"
            state: present
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Enable kernel modules on boot
          ansible.builtin.copy:
            mode: 0644
            content: "{{ item }}"
            dest: "/etc/modules-load.d/{{ item }}.conf"
          loop: [br_netfilter, overlay, rbd]
        - name: System Configuration (2) | Set sysctls
          ansible.posix.sysctl:
            name: "{{ item.key }}"
            value: "{{ item.value }}"
            sysctl_file: /etc/sysctl.d/99-kubernetes.conf
            reload: true
          with_dict: "{{ sysctl_config }}"
          vars:
            sysctl_config:
              net.ipv4.ip_forward: 1
              net.ipv4.conf.all.forwarding: 1
              net.ipv4.conf.all.rp_filter: 0
              net.ipv4.conf.default.rp_filter: 0
              net.ipv6.conf.all.forwarding: 1
              net.bridge.bridge-nf-call-iptables: 1
              net.bridge.bridge-nf-call-ip6tables: 1
              fs.inotify.max_user_watches: 524288
              fs.inotify.max_user_instances: 512

#        - name: System Configuration (2) | Disable swap
#          ansible.builtin.dnf:
#            name: zram-generator-defaults
#            state: absent

        - name: Disable swap for current session
          command: swapoff -a
          become: true

        - name: Disable swap permanently, persist reboots
          replace:
            path: /etc/fstab
            regexp: '^(\s*)([^#\n]+\s+)(\w+\s+)swap(\s+.*)$'
            replace: '#\1\2\3swap\4'
            backup: yes

      notify: Reboot

  handlers:
    - name: Reboot
      ansible.builtin.reboot:
        msg: Rebooting nodes
